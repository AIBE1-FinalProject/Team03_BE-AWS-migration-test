name: Deploy Backend to EC2

on:
  workflow_run:
    workflows: ["Backend CI Pipeline"]  # ‚úÖ CI ÏõåÌÅ¨ÌîåÎ°ú Ïù¥Î¶Ñ (backend-ci.yml ÎÇ¥Î∂ÄÏùò name)
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}  # ‚úÖ CI ÏÑ±Í≥µ ÏãúÏóêÎßå Ïã§Ìñâ
    name: Deploy Backend to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Connect to EC2 and Deploy Docker Container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}  # ‚úÖ ÎÑàÍ∞Ä Î≥¥Ïú†Ìïú ÌÇ§ Ïù¥Î¶ÑÏúºÎ°ú ÏÇ¨Ïö©
          port: 22
          script: |
            echo "‚úÖ EC2 Ï†ëÏÜç ÏôÑÎ£å. Í∏∞Ï°¥ Ïª®ÌÖåÏù¥ÎÑà Ï§ëÏßÄ Ï§ë..."
            docker stop ticketmon-backend || true
            docker rm ticketmon-backend || true

            echo "üîê GHCR Î°úÍ∑∏Ïù∏ Ï§ë..."
            echo "${{ secrets.GH_PACKAGES_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GH_PACKAGES_USER }} --password-stdin

            echo "‚¨áÔ∏è ÏµúÏã† Docker Ïù¥ÎØ∏ÏßÄ Pull Ï§ë..."
            docker pull ghcr.io/${{ secrets.DOCKER_IMAGE_REPO }}:latest

            echo "üöÄ ÏÉà Docker Ïª®ÌÖåÏù¥ÎÑà Ïã§Ìñâ Ï§ë..."
            docker run -d \
              --name ticketmon-backend \
              -p 80:8080 \
              -e SPRING_PROFILES_ACTIVE=prod \
              -e DB_URL='${{ secrets.DB_URL }}' \
              -e DB_USERNAME='${{ secrets.DB_USERNAME }}' \
              -e DB_PASSWORD='${{ secrets.DB_PASSWORD }}' \
              -e SPRING_DATA_REDIS_HOST='${{ secrets.SPRING_DATA_REDIS_HOST }}' \
              -e SPRING_DATA_REDIS_PORT='${{ secrets.SPRING_DATA_REDIS_PORT }}' \
              -e SPRING_DATA_REDIS_USERNAME='${{ secrets.SPRING_DATA_REDIS_USERNAME }}' \
              -e SPRING_DATA_REDIS_PASSWORD='${{ secrets.SPRING_DATA_REDIS_PASSWORD }}' \
              -e AWS_ACCESS_KEY_ID='${{ secrets.AWS_ACCESS_KEY_ID }}' \
              -e AWS_SECRET_ACCESS_KEY='${{ secrets.AWS_SECRET_ACCESS_KEY }}' \
              -e JWT_SECRET_KEY='${{ secrets.JWT_SECRET_KEY }}' \
              -e JWT_ACCESS_EXPIRATION_MS='${{ secrets.JWT_ACCESS_EXPIRATION_MS }}' \
              -e JWT_REFRESH_EXPIRATION_MS='${{ secrets.JWT_REFRESH_EXPIRATION_MS }}' \
              -e SQS_ENDPOINT='${{ secrets.SQS_ENDPOINT }}' \
              -e TOSS_CLIENT_KEY='${{ secrets.TOSS_CLIENT_KEY }}' \
              -e TOSS_SECRET_KEY='${{ secrets.TOSS_SECRET_KEY }}' \
              -e TOGETHER_API_KEY='${{ secrets.TOGETHER_API_KEY }}' \
              -e BASE_URL='${{ secrets.BASE_URL }}' \
              ghcr.io/${{ secrets.DOCKER_IMAGE_REPO }}:latest

            echo "üéâ Î∞∞Ìè¨ ÏôÑÎ£å!"
