# .env.example - 환경 변수 설정 예시 파일
# 이 파일을 복사하여 .env 파일을 생성하고 실제 값을 입력
# .env 파일은 Git 추적에서 제외됨 (.gitignore 참조)

# --- Spring 애플리케이션 기본 설정 ---

# 현재 실행할 Spring 프로필 (dev 또는 prod)을 지정
# 로컬 개발 시에는 'dev'로 설정하고, 운영 배포 시에는 'prod'로 설정
# (운영 배포 시에는 배포 시스템(CI/CD, Docker 등)에서 이 값을 주입하는 것을 권장)
SPRING_PROFILES_ACTIVE=dev

# 애플리케이션의 전역 로그 레벨을 설정 (application.yml에서 이 변수를 사용)
# 선택 가능한 값: DEBUG, INFO, WARN, ERROR
LOG_LEVEL=INFO

# Spring Boot 내장 서버가 사용할 포트 번호
SERVER_PORT=8080

# --- 데이터베이스 설정 (MySQL - Aiven용) ---
# 실제 운영 환경에서는 <your-aiven-host>, <port>, <your-aiven-username>, <your-aiven-password>를 실제 값으로 대체
# 보안을 위해 민감한 정보는 직접 커밋하지 않는 것을 권장
DB_URL=jdbc:mysql://<your-aiven-host>:<port>/ticketing_db
DB_USERNAME=<your-aiven-username>
DB_PASSWORD=<your-aiven-password>

# --- Redis 설정 (Docker 컨테이너 또는 로컬 Redis 기준) ---
SPRING_DATA_REDIS_HOST=localhost
SPRING_DATA_REDIS_PORT=6379
SPRING_DATA_REDIS_USERNAME=default
SPRING_DATA_REDIS_PASSWORD=

# --- Supabase Storage 설정 (로컬 개발 환경 및 현재 스토리지 사용) ---
# 실제 프로젝트 URL, 키, 버킷 이름을 입력.
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_KEY=your-secret-key
SUPABASE_PROFILE_BUCKET=your-profile-bucket
SUPABASE_POSTER_BUCKET=your-poster-bucket
SUPABASE_DOCS_BUCKET=your-docs-bucket

# --- ☁️ AWS S3 설정 (운영 환경에서 's3' 프로필 활성화 시 사용) ---
# AWS S3 관련 자격 증명 (IAM 사용자 Access Key 및 Secret Key)과 버킷 정보
# 운영 환경에서는 이 값들을 직접 .env에 저장하지 않고,
# 보안 저장소(예: AWS Secrets Manager, HashiCorp Vault)에서 주입받는 것을 강력히 권장
#AWS_ACCESS_KEY_ID=your-aws-access-key-id # 실제 AWS IAM Access Key ID
#AWS_SECRET_ACCESS_KEY=your-aws-secret-access-key # 실제 AWS IAM Secret Access Key
#AWS_REGION_STATIC=ap-northeast-2 # AWS 리전 (예: ap-northeast-2 서울)
#S3_BUCKET=ticketmon-prod-assets # 운영 환경에서 사용할 S3 버킷 이름 (개발과 다르게 설정)
#
## 📁 S3 내 파일 저장 경로 접두사 (폴더처럼 작동)
#S3_PROFILE_PREFIX=profile-imgs/
#S3_POSTER_PREFIX=poster-imgs/
#S3_SELLER_DOCS_PREFIX=seller-docs/

# --- GitHub Packages 인증 설정 (CI/CD 파이프라인에서 사용) ---
# Supabase SDK 대신 S3로 마이그레이션하여 GitHub Packages를 더 이상 사용하지 않는 경우, 이 섹션은 제거 가능
# GH_PACKAGES_USER=your-github-username
# GH_PACKAGES_TOKEN=ghp_xxxxxxxx # 유효한 GitHub Personal Access Token (PAT)

# --- JWT (JSON Web Token) 인증 설정 ---
# JWT 토큰 발급 및 검증에 사용되는 비밀 키
# 실제 배포 시에는 강력하고 무작위적인 비밀 키로 교체해야 함.
JWT_SECRET_KEY=your-super-secret-key
JWT_EXPIRATION_MS=3600000 # 토큰 만료 시간 (밀리초 단위, 기본 1시간)

# --- AWS SQS 설정 (로컬 개발 시 LocalStack 사용) ---
# 운영 환경에서는 실제 AWS SQS 엔드포인트 및 유효한 AWS 자격 증명(AWS IAM 키)으로 교체해야 함.
SQS_ENDPOINT=http://localhost:4566
AWS_ACCESS_KEY=test-key
AWS_SECRET_KEY=test-secret

# --- WebSocket 설정 (추후 도전 과제용) ---
WEBSOCKET_PORT=8081